<UserControl
    x:Class="GES.View.SlotDataViewer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:GES.View.Controls"
    xmlns:behaviors="clr-namespace:GES.Source.Mvvm.AttachedBehaviors"
    xmlns:content="clr-namespace:GES.Content"
    xmlns:converters="clr-namespace:GES.Source.Mvvm.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hexEditor="clr-namespace:WpfHexaEditor;assembly=WPFHexaEditor"
    xmlns:intr="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:src="clr-namespace:GES.View;assembly=GES"
    x:Name="GESSlotDataViewer"
    d:DesignHeight="512"
    d:DesignWidth="1024"
    x:ClassModifier="public"
    DataContext="{Binding SlotDataViewerViewModel, Source={StaticResource ViewModelLocator}}"
    mc:Ignorable="d">
    <x:Code>
        <![CDATA[ public SlotDataViewer() { InitializeComponent(); }]]>
    </x:Code>
    <Grid Background="{StaticResource GESColorPanel}">
        <Grid.Resources>
            <converters:UInt64ToAddressConverter x:Key="IntPtrToAddressConverter" />
            <converters:AlternatingColorConverter x:Key="AlternatingColorConverter" />
            <converters:IntToHexConverter x:Key="IntToHexConverter" />
            <converters:InventorySlotColorConverter x:Key="InventorySlotColorConverter" />
            <converters:ItemRefToIconConverter x:Key="ItemRefToIconConverter" />
            <converters:ItemRefToNameConverter x:Key="ItemRefToNameConverter" />
            <converters:ItemRefToIdConverter x:Key="ItemRefToIdConverter" />
            <converters:ValueConverterGroup x:Key="ItemRefToHexIdConverter">
                <converters:ItemRefToIdConverter />
                <converters:IntToHexConverter />
            </converters:ValueConverterGroup>
            <converters:CraftedItemIdConverter x:Key="CraftedItemIdConverter" />
            <converters:ValueConverterGroup x:Key="CraftedItemIdHexConverter">
                <converters:CraftedItemIdConverter />
                <converters:IntToHexConverter />
            </converters:ValueConverterGroup>
            <converters:ValueConverterGroup x:Key="CraftedItemIconConverter">
                <converters:CraftedItemIdConverter />
                <converters:ItemToIconConverter />
            </converters:ValueConverterGroup>
            <converters:ValueConverterGroup x:Key="CraftedItemNameConverter">
                <converters:CraftedItemIdConverter />
                <converters:ItemToNameConverter />
            </converters:ValueConverterGroup>
            <converters:CraftColorConverter x:Key="CraftColorConverter" />
            <converters:CraftSlotIconConverter x:Key="CraftSlotIconConverter" />
            <converters:CraftPropertiesConverter x:Key="CraftPropertiesConverter" />
            <converters:BooleanToVisibilityConverter
                x:Key="BooleanToHiddenConverter"
                False="Hidden"
                True="Visible" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Background="{StaticResource GESColorPanel}" DataContext="{Binding InventoryViewerViewModel, Source={StaticResource ViewModelLocator}}">
            <TabControl Background="{StaticResource GESColorPanel}" SelectedIndex="{Binding SlotDataViewer.ActiveSlot, Source={StaticResource ViewModelLocator}}">
                <TabControl.Resources>
                    <Style TargetType="{x:Type TabItem}">
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Border Background="{StaticResource GESColorGray20}" BorderThickness="0">
                                        <ContentPresenter>
                                            <ContentPresenter.Content>
                                                <TextBlock
                                                    Margin="4,2,4,2"
                                                    Foreground="{StaticResource GESColorWhite}"
                                                    Text="{TemplateBinding Content}" />
                                            </ContentPresenter.Content>
                                        </ContentPresenter>
                                    </Border>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>
                <TabItem Background="Transparent" Header="Slot 1">
                    <DataGrid
                        Grid.Row="0"
                        Grid.Column="0"
                        AutoGenerateColumns="False"
                        Background="Transparent"
                        CanUserAddRows="False"
                        CanUserResizeColumns="true"
                        ColumnWidth="*"
                        HeadersVisibility="Column"
                        ItemsSource="{Binding Path=PlayerSlots[0].RawEquipment}"
                        RowHeaderWidth="0"
                        SelectionMode="Extended"
                        SelectionUnit="FullRow">
                        <DataGrid.Resources>
                            <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                                <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                                <Setter Property="IsManipulationEnabled" Value="False" />
                                <Setter Property="IsTabStop" Value="False" />
                            </Style>
                        </DataGrid.Resources>
                        <DataGrid.ColumnHeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}">
                                <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                                <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                <Setter Property="Padding" Value="4,0,4,0" />
                            </Style>
                        </DataGrid.ColumnHeaderStyle>
                        <DataGrid.Style>
                            <Style TargetType="{x:Type DataGrid}">
                                <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                                <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                            </Style>
                        </DataGrid.Style>
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                                <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn
                                Width="Auto"
                                CellStyle="{StaticResource NoFocus}"
                                Header="Slot"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                            <TextBlock
                                                Margin="4,0,4,0"
                                                Foreground="{StaticResource GESColorWhite}"
                                                Text="{Binding Path=Index, Mode=OneWay}" />
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                MinWidth="16"
                                MaxWidth="16"
                                Header=""
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Background="#ffe7b5">
                                            <Image Source="{Binding Path=., Converter={StaticResource ItemRefToIconConverter}, Mode=OneWay}" />
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                Width="Auto"
                                Header="Item Name"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                            <TextBlock Margin="4,0,4,0" Text="{Binding Path=., Converter={StaticResource ItemRefToNameConverter}}" />
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                Width="Auto"
                                Header="Inventory Slot Id"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                            <StackPanel Orientation="Horizontal">
                                                <Menu
                                                    HorizontalAlignment="Right"
                                                    VerticalAlignment="Center"
                                                    Background="Transparent">
                                                    <MenuItem
                                                        Height="16"
                                                        Command="{Binding InventoryViewerViewModel.EditItemCommand, Source={StaticResource ViewModelLocator}}"
                                                        CommandParameter="{Binding .}"
                                                        ToolTip="Edit item"
                                                        WindowChrome.IsHitTestVisibleInChrome="True">
                                                        <MenuItem.Header>
                                                            <Image
                                                                Width="16"
                                                                Height="16"
                                                                Margin="-4"
                                                                Source="{x:Static content:Images.Edit}" />
                                                        </MenuItem.Header>
                                                    </MenuItem>
                                                </Menu>
                                                <TextBlock Margin="4,0,4,0" Text="{Binding Path=InventorySlotId, Converter={StaticResource IntToHexConverter}, ConverterParameter=true}" />
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                Width="Auto"
                                Header="Address"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                            <StackPanel Orientation="Horizontal">
                                                <Menu VerticalAlignment="Center" Background="Transparent">
                                                    <MenuItem
                                                        Height="16"
                                                        Command="{Binding InventoryViewerViewModel.CopyAddressCommand, Source={StaticResource ViewModelLocator}}"
                                                        CommandParameter="{Binding .}"
                                                        ToolTip="Copy to clipboard"
                                                        WindowChrome.IsHitTestVisibleInChrome="True">
                                                        <MenuItem.Header>
                                                            <Image
                                                                Width="16"
                                                                Height="16"
                                                                Margin="-4"
                                                                Source="{x:Static content:Images.Script}" />
                                                        </MenuItem.Header>
                                                    </MenuItem>
                                                </Menu>
                                                <TextBlock Margin="0,0,8,0" Text="{Binding Path=Address, Converter={StaticResource IntToHexConverter}}" />
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTemplateColumn
                                Width="*"
                                Header="Raw Address"
                                IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                            <StackPanel Orientation="Horizontal">
                                                <Menu VerticalAlignment="Center" Background="Transparent">
                                                    <MenuItem
                                                        Height="16"
                                                        Command="{Binding InventoryViewerViewModel.CopyRawAddressCommand, Source={StaticResource ViewModelLocator}}"
                                                        CommandParameter="{Binding .}"
                                                        ToolTip="Copy to clipboard"
                                                        WindowChrome.IsHitTestVisibleInChrome="True">
                                                        <MenuItem.Header>
                                                            <Image
                                                                Width="16"
                                                                Height="16"
                                                                Margin="-4"
                                                                Source="{x:Static content:Images.Script}" />
                                                        </MenuItem.Header>
                                                    </MenuItem>
                                                </Menu>
                                                <TextBlock Margin="0,0,8,0" Text="{Binding Path=RawAddress, Converter={StaticResource IntToHexConverter}}" />
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </TabItem>
            </TabControl>
        </Grid>

    </Grid>
</UserControl>