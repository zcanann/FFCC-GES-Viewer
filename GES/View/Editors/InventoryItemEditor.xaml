<shell:Window
    x:Class="GES.View.Editors.InventoryItemEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:GES.Source.Mvvm.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    x:Name="GESInventoryItemEditor"
    Title="Item Editor"
    Width="1024"
    Height="512"
    d:DesignHeight="512"
    d:DesignWidth="1024"
    BorderBrush="{StaticResource GESColorWhite}"
    BorderThickness="2"
    DataContext="{Binding InventoryItemEditorViewModel, Source={StaticResource ViewModelLocator}}"
    WindowStartupLocation="CenterOwner"
    WindowStyle="None"
    mc:Ignorable="d">
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="{Binding ActualHeight, ElementName=titlebar}" />
    </shell:WindowChrome.WindowChrome>
    <shell:Window.Resources>
        <converters:UInt64ToAddressConverter x:Key="IntPtrToAddressConverter" />
        <converters:IntToHexConverter x:Key="IntToHexConverter" />
        <converters:ItemToIconConverter x:Key="ItemToIconConverter" />
        <converters:EquipmentSlotIconConverter x:Key="EquipmentSlotIconConverter" />
        <converters:AlternatingColorConverter x:Key="AlternatingColorConverter" />
        <converters:ItemToNameConverter x:Key="ItemToNameConverter" />
        <converters:ExtendedInventorySlotToColorConverter x:Key="ExtendedInventorySlotToColorConverter" />
        <converters:BooleanToVisibilityConverter
            x:Key="BooleanToHiddenConverter"
            False="Hidden"
            True="Visible" />
    </shell:Window.Resources>
    <Grid Background="{StaticResource GESColorFrame}">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <DataGrid
            Grid.Row="0"
            AutoGenerateColumns="False"
            Background="Transparent"
            CanUserAddRows="False"
            CanUserResizeColumns="true"
            ColumnWidth="*"
            HeadersVisibility="Column"
            ItemsSource="{Binding ItemCatalogViewerViewModel.ItemCatalog.RawItems, Source={StaticResource ViewModelLocator}}"
            MouseDoubleClick="DataGrid_MouseDoubleClick"
            RowHeaderWidth="0"
            SelectedIndex="{Binding InventoryItemEditorViewModel.SelectedItem, Source={StaticResource ViewModelLocator}, Mode=TwoWay}"
            SelectionMode="Single"
            SelectionUnit="FullRow">
            <DataGrid.Resources>
                <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                    <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                    <Setter Property="IsManipulationEnabled" Value="False" />
                    <Setter Property="IsTabStop" Value="False" />
                </Style>
            </DataGrid.Resources>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                    <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="4,0,4,0" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.Style>
                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                    <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                </Style>
            </DataGrid.Style>
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                    <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn
                    Width="*"
                    CellStyle="{StaticResource NoFocus}"
                    Header="Item"
                    IsReadOnly="True">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                <StackPanel Orientation="Horizontal">
                                    <Border Background="#ffe7b5">
                                        <Image
                                            Width="16"
                                            Height="16"
                                            Source="{Binding Path=Index, Converter={StaticResource ItemToIconConverter}, Mode=OneWay}" />
                                    </Border>
                                    <TextBlock Margin="4,0,0,0" Text="{Binding Path=Index, Converter={StaticResource IntToHexConverter}, Mode=OneWay}" />
                                    <TextBlock Margin="4,0,0,0" Text="{Binding Path=Index, Converter={StaticResource ItemToNameConverter}, Mode=OneWay}" />
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <shell:Grid Grid.Row="1" Margin="8">
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <shell:Button
                    Name="CancelButton"
                    Width="96"
                    Height="20"
                    Margin="0,0,32,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Click="CancelButton_Click"
                    IsCancel="True">
                    <shell:TextBlock Text="Cancel" />
                </shell:Button>
                <shell:Button
                    Name="AcceptButton"
                    Width="96"
                    Height="20"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    shell:Grid.Column="1"
                    Click="AcceptButton_Click"
                    IsDefault="True">
                    <shell:TextBlock Text="Okay" />
                </shell:Button>
            </StackPanel>
        </shell:Grid>
    </Grid>
</shell:Window>