<UserControl
    x:Class="GES.View.InventoryViewer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:GES.View.Controls"
    xmlns:behaviors="clr-namespace:GES.Source.Mvvm.AttachedBehaviors"
    xmlns:content="clr-namespace:GES.Content"
    xmlns:converters="clr-namespace:GES.Source.Mvvm.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:hexEditor="clr-namespace:WpfHexaEditor;assembly=WPFHexaEditor"
    xmlns:intr="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:src="clr-namespace:GES.View;assembly=GES"
    x:Name="GESInventoryViewer"
    d:DesignHeight="512"
    d:DesignWidth="1024"
    x:ClassModifier="public"
    DataContext="{Binding InventoryViewerViewModel, Source={StaticResource ViewModelLocator}}"
    mc:Ignorable="d">
    <x:Code>
        <![CDATA[ public InventoryViewer() { InitializeComponent(); }]]>
    </x:Code>
    <Grid Background="{StaticResource GESColorPanel}">
        <Grid.Resources>
            <converters:UInt64ToAddressConverter x:Key="IntPtrToAddressConverter" />
            <converters:IntToHexConverter x:Key="IntToHexConverter" />
            <converters:IntToBinaryConverter x:Key="IntToBinaryConverter" />
            <converters:ItemToIconConverter x:Key="ItemToIconConverter" />
            <converters:AlternatingColorConverter x:Key="AlternatingColorConverter" />

            <converters:ItemToNameConverter x:Key="ItemToNameConverter" />
            <converters:ExtendedInventorySlotToColorConverter x:Key="ExtendedInventorySlotToColorConverter" />
            <converters:BooleanToVisibilityConverter
                x:Key="BooleanToHiddenConverter"
                False="Hidden"
                True="Visible" />
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DataGrid
                Grid.Row="0"
                Grid.Column="0"
                AutoGenerateColumns="False"
                Background="Transparent"
                CanUserAddRows="False"
                CanUserResizeColumns="true"
                ColumnWidth="*"
                HeadersVisibility="Column"
                ItemsSource="{Binding Path=PlayerSlots[0].RawItems}"
                RowHeaderWidth="0"
                SelectionMode="Extended"
                SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                        <Setter Property="IsManipulationEnabled" Value="False" />
                        <Setter Property="IsTabStop" Value="False" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="4,0,4,0" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        Width="Auto"
                        CellStyle="{StaticResource NoFocus}"
                        Header="Slot"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock
                                        Margin="4,0,4,0"
                                        Foreground="{Binding Path=., Converter={StaticResource ExtendedInventorySlotToColorConverter}}"
                                        Text="{Binding Path=Index, Converter={StaticResource IntToBinaryConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        MinWidth="16"
                        MaxWidth="16"
                        Header="1"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="#ffe7b5">
                                    <Image Source="{Binding Path=ItemId, Converter={StaticResource ItemToIconConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="Auto"
                        Header="Id"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource IntToHexConverter}, ConverterParameter=true}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="*"
                        Header="Item Name"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource ItemToNameConverter}}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid
                Grid.Row="0"
                Grid.Column="1"
                AutoGenerateColumns="False"
                Background="Transparent"
                CanUserAddRows="False"
                CanUserResizeColumns="true"
                ColumnWidth="*"
                HeadersVisibility="Column"
                ItemsSource="{Binding Path=PlayerSlots[1].RawItems}"
                RowHeaderWidth="0"
                SelectionMode="Extended"
                SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                        <Setter Property="IsManipulationEnabled" Value="False" />
                        <Setter Property="IsTabStop" Value="False" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="4,0,4,0" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        Width="Auto"
                        CellStyle="{StaticResource NoFocus}"
                        Header="Slot"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock
                                        Margin="4,0,4,0"
                                        Foreground="{Binding Path=., Converter={StaticResource ExtendedInventorySlotToColorConverter}}"
                                        Text="{Binding Path=Index, Converter={StaticResource IntToBinaryConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        MinWidth="16"
                        MaxWidth="16"
                        Header="2"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="#ffe7b5">
                                    <Image Source="{Binding Path=ItemId, Converter={StaticResource ItemToIconConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="Auto"
                        Header="Id"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource IntToHexConverter}, ConverterParameter=true}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="*"
                        Header="Item Name"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource ItemToNameConverter}}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid
                Grid.Row="0"
                Grid.Column="2"
                AutoGenerateColumns="False"
                Background="Transparent"
                CanUserAddRows="False"
                CanUserResizeColumns="true"
                ColumnWidth="*"
                HeadersVisibility="Column"
                ItemsSource="{Binding Path=PlayerSlots[2].RawItems}"
                RowHeaderWidth="0"
                SelectionMode="Extended"
                SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                        <Setter Property="IsManipulationEnabled" Value="False" />
                        <Setter Property="IsTabStop" Value="False" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="4,0,4,0" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        Width="Auto"
                        CellStyle="{StaticResource NoFocus}"
                        Header="Slot"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock
                                        Margin="4,0,4,0"
                                        Foreground="{Binding Path=., Converter={StaticResource ExtendedInventorySlotToColorConverter}}"
                                        Text="{Binding Path=Index, Converter={StaticResource IntToBinaryConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        MinWidth="16"
                        MaxWidth="16"
                        Header="3"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="#ffe7b5">
                                    <Image Source="{Binding Path=ItemId, Converter={StaticResource ItemToIconConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="Auto"
                        Header="Id"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource IntToHexConverter}, ConverterParameter=true}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="*"
                        Header="Item Name"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource ItemToNameConverter}}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid
                Grid.Row="0"
                Grid.Column="3"
                AutoGenerateColumns="False"
                Background="Transparent"
                CanUserAddRows="False"
                CanUserResizeColumns="true"
                ColumnWidth="*"
                HeadersVisibility="Column"
                ItemsSource="{Binding Path=PlayerSlots[3].RawItems}"
                RowHeaderWidth="0"
                SelectionMode="Extended"
                SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                        <Setter Property="IsManipulationEnabled" Value="False" />
                        <Setter Property="IsTabStop" Value="False" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="4,0,4,0" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        Width="Auto"
                        CellStyle="{StaticResource NoFocus}"
                        Header="Slot"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock
                                        Margin="4,0,4,0"
                                        Foreground="{Binding Path=., Converter={StaticResource ExtendedInventorySlotToColorConverter}}"
                                        Text="{Binding Path=Index, Converter={StaticResource IntToBinaryConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        MinWidth="16"
                        MaxWidth="16"
                        Header="4"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="#ffe7b5">
                                    <Image Source="{Binding Path=ItemId, Converter={StaticResource ItemToIconConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="Auto"
                        Header="Id"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource IntToHexConverter}, ConverterParameter=true}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="*"
                        Header="Item Name"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource ItemToNameConverter}}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid
                Grid.Row="1"
                Grid.Column="0"
                AutoGenerateColumns="False"
                Background="Transparent"
                CanUserAddRows="False"
                CanUserResizeColumns="true"
                ColumnWidth="*"
                HeadersVisibility="Column"
                ItemsSource="{Binding Path=PlayerSlots[4].RawItems}"
                RowHeaderWidth="0"
                SelectionMode="Extended"
                SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                        <Setter Property="IsManipulationEnabled" Value="False" />
                        <Setter Property="IsTabStop" Value="False" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="4,0,4,0" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        Width="Auto"
                        CellStyle="{StaticResource NoFocus}"
                        Header="Slot"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock
                                        Margin="4,0,4,0"
                                        Foreground="{Binding Path=., Converter={StaticResource ExtendedInventorySlotToColorConverter}}"
                                        Text="{Binding Path=Index, Converter={StaticResource IntToBinaryConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        MinWidth="16"
                        MaxWidth="16"
                        Header="5"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="#ffe7b5">
                                    <Image Source="{Binding Path=ItemId, Converter={StaticResource ItemToIconConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="Auto"
                        Header="Id"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource IntToHexConverter}, ConverterParameter=true}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="*"
                        Header="Item Name"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource ItemToNameConverter}}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid
                Grid.Row="1"
                Grid.Column="1"
                AutoGenerateColumns="False"
                Background="Transparent"
                CanUserAddRows="False"
                CanUserResizeColumns="true"
                ColumnWidth="*"
                HeadersVisibility="Column"
                ItemsSource="{Binding Path=PlayerSlots[5].RawItems}"
                RowHeaderWidth="0"
                SelectionMode="Extended"
                SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                        <Setter Property="IsManipulationEnabled" Value="False" />
                        <Setter Property="IsTabStop" Value="False" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="4,0,4,0" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        Width="Auto"
                        CellStyle="{StaticResource NoFocus}"
                        Header="Slot"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock
                                        Margin="4,0,4,0"
                                        Foreground="{Binding Path=., Converter={StaticResource ExtendedInventorySlotToColorConverter}}"
                                        Text="{Binding Path=Index, Converter={StaticResource IntToBinaryConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        MinWidth="16"
                        MaxWidth="16"
                        Header="6"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="#ffe7b5">
                                    <Image Source="{Binding Path=ItemId, Converter={StaticResource ItemToIconConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="Auto"
                        Header="Id"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource IntToHexConverter}, ConverterParameter=true}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="*"
                        Header="Item Name"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource ItemToNameConverter}}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid
                Grid.Row="1"
                Grid.Column="2"
                AutoGenerateColumns="False"
                Background="Transparent"
                CanUserAddRows="False"
                CanUserResizeColumns="true"
                ColumnWidth="*"
                HeadersVisibility="Column"
                ItemsSource="{Binding Path=PlayerSlots[6].RawItems}"
                RowHeaderWidth="0"
                SelectionMode="Extended"
                SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                        <Setter Property="IsManipulationEnabled" Value="False" />
                        <Setter Property="IsTabStop" Value="False" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="4,0,4,0" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        Width="Auto"
                        CellStyle="{StaticResource NoFocus}"
                        Header="Slot"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock
                                        Margin="4,0,4,0"
                                        Foreground="{Binding Path=., Converter={StaticResource ExtendedInventorySlotToColorConverter}}"
                                        Text="{Binding Path=Index, Converter={StaticResource IntToBinaryConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        MinWidth="16"
                        MaxWidth="16"
                        Header="7"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="#ffe7b5">
                                    <Image Source="{Binding Path=ItemId, Converter={StaticResource ItemToIconConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="Auto"
                        Header="Id"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource IntToHexConverter}, ConverterParameter=true}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="*"
                        Header="Item Name"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource ItemToNameConverter}}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid
                Grid.Row="1"
                Grid.Column="3"
                AutoGenerateColumns="False"
                Background="Transparent"
                CanUserAddRows="False"
                CanUserResizeColumns="true"
                ColumnWidth="*"
                HeadersVisibility="Column"
                ItemsSource="{Binding Path=PlayerSlots[7].RawItems}"
                RowHeaderWidth="0"
                SelectionMode="Extended"
                SelectionUnit="FullRow">
                <DataGrid.Resources>
                    <Style x:Key="NoFocus" TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorGray24}" />
                        <Setter Property="IsManipulationEnabled" Value="False" />
                        <Setter Property="IsTabStop" Value="False" />
                    </Style>
                </DataGrid.Resources>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="4,0,4,0" />
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                    </Style>
                </DataGrid.Style>
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource GESColorBlue}" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Background" Value="{StaticResource GESColorPanel}" />
                        <Setter Property="Foreground" Value="{StaticResource GESColorWhite}" />
                        <Setter Property="BorderBrush" Value="{StaticResource GESColorBorder}" />
                    </Style>
                </DataGrid.CellStyle>
                <DataGrid.Columns>
                    <DataGridTemplateColumn
                        Width="Auto"
                        CellStyle="{StaticResource NoFocus}"
                        Header="Slot"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock
                                        Margin="4,0,4,0"
                                        Foreground="{Binding Path=., Converter={StaticResource ExtendedInventorySlotToColorConverter}}"
                                        Text="{Binding Path=Index, Converter={StaticResource IntToBinaryConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        MinWidth="16"
                        MaxWidth="16"
                        Header="8"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="#ffe7b5">
                                    <Image Source="{Binding Path=ItemId, Converter={StaticResource ItemToIconConverter}, Mode=OneWay}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="Auto"
                        Header="Id"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource IntToHexConverter}, ConverterParameter=true}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn
                        Width="*"
                        Header="Item Name"
                        IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Border Background="{Binding Path=Index, Converter={StaticResource AlternatingColorConverter}}">
                                    <TextBlock Margin="4,0,4,0" Text="{Binding Path=ItemId, Converter={StaticResource ItemToNameConverter}}" />
                                </Border>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>